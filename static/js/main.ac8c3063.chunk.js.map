{"version":3,"sources":["components/Input.js","components/ListUrls.js","api/base.js","api/methods.js","notification/successNotification.js","components/Modal.js","components/Pagination.js","notification/errorNotification.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayingErrorMessagesSchema","Yup","shape","full_url","url","required","Input","createUrl","initialValues","validationSchema","onSubmit","form","setSubmitting","setErrors","resetForm","errors","touched","values","className","name","type","placeholder","join","id","ListUrls","urls","deleteUrl","Card","fullUrl","shortUrl","hash","style","minHeight","href","fontSize","color","cursor","onClick","map","idx","short_url","apiClient","axios","create","baseURL","process","defaults","withCredentials","interceptors","response","use","a","error","Promise","reject","get","post","destroy","delete","apiRequests","nextPage","body","hash_url","successNotification","message","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Modal","tabIndex","data-bs-dismiss","aria-label","Pagination","prevPage","fetchUrls","handleClick","page","errorNotification","Main","useState","listUrls","setListUrls","then","res","data","catch","err","useEffect","next","previous","results","App","path","exact","component","position","newestOnTop","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac8c3063.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Formik, Form, Field} from 'formik';\nimport * as Yup from 'yup';\n\n\nconst DisplayingErrorMessagesSchema = Yup.object().shape({\n    full_url: Yup.string()\n        .url('Введите корректную ссылку')\n        .required('Обязаельное поле'),\n});\n\nexport const Input = ({createUrl}) => {\n\n    return (\n        <Formik\n            initialValues={{\n                full_url: '',\n            }}\n            validationSchema={DisplayingErrorMessagesSchema}\n            onSubmit={(form, {setSubmitting, setErrors, resetForm}) => {\n                createUrl(form)\n                resetForm()\n            }}\n        >\n            {({errors, touched, values}) => (\n                <Form>\n                    <div className=\"input-group mb-3\">\n                        <Field\n                            name=\"full_url\"\n                            type=\"url\"\n                            placeholder=\"https://example.com/\"\n                            className={['form-control form-control-lg ',\n                                    touched.full_url && errors.full_url\n                                        ? 'is-invalid'\n                                        : ''\n                                    ].join(' ')}\n                            id=\"url-input\"\n                        />\n                        <button type=\"submit\" className=\"btn btn-outline-success\">Сократить</button>\n                    </div>\n                    {\n                        touched.full_url && errors.full_url &&\n                        <div className=\"invalid-feedback\">{errors.full_url}</div>\n                    }\n                </Form>\n            )}\n        </Formik>\n    )\n};","import React, {useEffect, useState} from 'react';\n\n\nexport const ListUrls = ({urls, deleteUrl}) => {\n\n    const Card = ({fullUrl, shortUrl, hash}) => (\n        <div className=\"card mb-2\" style={{minHeight: '5rem'}}>\n            <div className=\"card-body\">\n                <div className='row'>\n                    <div className=\"col text-truncate\">\n                        <h5 className=\"card-title\"><a href={shortUrl}>{shortUrl}</a></h5>\n                        <p>{fullUrl}</p>\n                    </div>\n                    <div className=\"col d-flex justify-content-end align-items-center\">\n                        <i\n                            className=\"fas fa-trash-alt\"\n                            style={{fontSize: '1.5rem', color: \"red\", cursor: 'pointer'}}\n                            onClick={() => deleteUrl(hash)}\n                        ></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className='mt-3'>\n            {\n                urls.map((url, idx) => (\n                    <div className=\"col\" key={idx}>\n                        <Card\n                            fullUrl={url.full_url}\n                            shortUrl={url.short_url}\n                            hash={url.hash}\n                            key={idx}\n                        />\n                    </div>\n                ))\n            }\n        </div>\n\n    )\n}","import axios from \"axios\";\n\nconst API_ADDRESS = process.env.REACT_APP_API_ADDRESS\n\nconst apiClient = axios.create({\n  baseURL: API_ADDRESS,\n});\n\napiClient.defaults.withCredentials = true;\n\napiClient.interceptors.response.use((response) =>\n  response,\n  async (error) => {\n    return Promise.reject(error.response);\n  },\n);\n\nconst { get, post, delete: destroy } = apiClient;\nexport { get, post, destroy };","import { get, post, destroy } from \"./base\";\n\nexport const apiRequests = {\n    redirect: hash_url => get(`api/v1/${hash_url}/`),\n    getUrls: nextPage => get(nextPage ? nextPage : 'api/v1/urls/all/'),\n    createUrl: body => post('api/v1/urls/create/', body),\n    deleteUrls: hash_url => destroy(`api/v1/urls/${hash_url}/delete/`),\n}","import { toast } from \"react-toastify\";\n\nexport const successNotification = (message) =>\n  toast.success(message, {\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n","import React from 'react';\n\n\nexport const Modal = () => {\n    return (\n        <div className=\"modal\" tabIndex=\"-1\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Modal title</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>Modal body text goes here.</p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useEffect} from \"react\";\n\nexport const Pagination = ({nextPage, prevPage, fetchUrls}) => {\n\n    const handleClick = (page) => {\n        fetchUrls(page)\n    }\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n                <li className={`page-item${prevPage ? '' : ' disabled'}`}>\n                    <button\n                        className=\"page-link\"\n                        onClick={() => handleClick(prevPage)}\n                    >Назад</button>\n                </li>\n                <li className={`page-item${nextPage ? '' : ' disabled'}`}>\n                    <button\n                        className=\"page-link\"\n                        onClick={() => handleClick(nextPage)}\n                    >Вперед</button>\n                </li>\n            </ul>\n        </nav>\n    )\n}","import { toast } from \"react-toastify\";\n\nexport const errorNotification = (message) =>\n  toast.error(message, {\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n","import React, {useEffect, useState} from 'react';\nimport {Input} from \"../components/Input\";\nimport {ListUrls} from \"../components/ListUrls\";\nimport {apiRequests} from \"../api/methods\";\nimport {successNotification} from \"../notification/successNotification\";\nimport {Modal} from \"../components/Modal\";\nimport {Pagination} from \"../components/Pagination\";\nimport {errorNotification} from \"../notification/errorNotification\";\n\n\nexport const Main = () => {\n    const [listUrls, setListUrls] = useState(null)\n    const [successModal, setSuccessModal] = useState(false)\n\n    const fetchUrls = (page) => {\n        apiRequests.getUrls(page).then(res => {\n            setListUrls(res.data)\n        }).catch(err => {\n            errorNotification('Ошбика загрузки доступных ссылок')\n        })\n    }\n\n    const deleteUrl = (hash) => {\n        apiRequests.deleteUrls(hash).then(() => {\n            successNotification('Ссылка удалена')\n            fetchUrls()\n        }).catch(() => {\n            errorNotification('Ошбика удаления ссылки')\n        })\n    }\n\n    const createUrl = (url) => {\n        apiRequests.createUrl(url).then(() => {\n            successNotification('Ссылка создана')\n            fetchUrls()\n        }).catch(() => {\n            errorNotification('Ошбика cоздания короткой ссылки')\n        })\n    }\n\n    useEffect(() => {\n        fetchUrls()\n    }, [])\n\n    return (\n        <>\n            <h3>Сокращение ссылок</h3>\n            <Input createUrl={createUrl}/>\n            {\n                listUrls\n                    ? listUrls.next || listUrls.previous\n                        ?   <>\n                            <ListUrls\n                                urls={listUrls.results}\n                                deleteUrl={deleteUrl}\n                            />\n                            <Pagination\n                                nextPage={listUrls.next}\n                                prevPage={listUrls.previous}\n                                fetchUrls={fetchUrls}\n                            />\n                        </>\n                        : <ListUrls\n                            urls={listUrls.results}\n                            deleteUrl={deleteUrl}\n                        />\n                    : null\n            }\n            <Modal/>\n        </>\n    )\n}","import './App.css';\nimport { Main } from './pages/Main'\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"container\" >\n            <Switch>\n                <Route path=\"/\" exact component={ Main }/>\n            </Switch>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss={false}\n                draggable={false}\n                pauseOnHover={false}\n            />\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}